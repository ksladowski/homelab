---
- name: Bootstrap container
  hosts: bookstack
  remote_user: root
  roles:
    - root_ansibleuser
  tags:
    - bootstrap

- name: Set up bookstack
  hosts: bookstack
  roles:
    - apache
    - mariadb
  tags:
    - main
  tasks:
    - name: Install prerequisites
      ansible.builtin.apt:
        name: '{{ item }}'
        state: present
      become: true
      with_items:
        - git
        - php8.2
        - composer
        - php8.2-mbstring
        - php8.2-ldap
        - php-tokenizer
        - php8.2-gd
        - php8.2-mysql
        - php8.2-xml
        - php8.2-curl

    - name: Clone bookstack app
      ansible.builtin.git:
        repo: 'https://github.com/BookStackApp/BookStack.git'
        dest: /var/www/bookstack
        force: true
        version: "release"
        single_branch: true
      become: true
      tags:
        - update

    - name: Set permissions on application directory
      ansible.builtin.file:
        path: /var/www/bookstack
        owner: ansible
        group: www-data
        mode: '755'
        recurse: true
        state: directory
      become: true
    
    - name: Run php composer
      community.general.composer:
        working_dir: /var/www/bookstack
        command: "install"
        no_dev: true
    
    - name: Deploy .env file
      ansible.builtin.template:
        src: .env.j2
        dest: /var/www/bookstack/.env
        group: www-data
        owner: ansible
        mode: '640'
      become: true

    - name: Set write access on specified directories
      ansible.builtin.file:
        path: '{{ item }}'
        owner: ansible
        group: www-data
        mode: '775'
        recurse: true
        state: directory
      become: true
      with_items:
        - /var/www/bookstack/storage
        - /var/www/bookstack/bootstrap/cache
        - /var/www/bookstack/public/uploads 

    - name: Point apache documentroot to bookstack public folder
      ansible.builtin.copy:
        dest: /etc/apache2/sites-available/bookstack.conf
        src: bookstack.conf
      become: true

    - name: Run php artisan migrate
      ansible.builtin.command:
        cmd: a2ensite bookstack.conf
      become: true
      notify: handler_restartApache
    
    - name: Run php artisan migrate
      ansible.builtin.command:
        chdir: /var/www/bookstack
        cmd: php artisan migrate --force

    # the "failed when" on this one doesn't work but I'm leaving it for now because
    # this is the last step anyway
    - name: Enable apache modules
      community.general.apache2_module:
        name: '{{ item }}'
        state: present
      become: true
      with_items:
        - rewrite
        - php8.2
      notify: handler_restartApache
      failed_when: 
        - '"already enabled" not in result.stdout'

  handlers:
    - name: handler_restartApache
      ansible.builtin.systemd_service:
        name: apache2
        state: restarted
      become: true