---
- name: Create database for lldap
  ansible.builtin.include_role:
    name: postgres
  vars:
    db_name: "lldap"
    db_user: "lldap"
    db_password: "{{ lldap_db_password }}"

- name: Create user/group for lldap
  ansible.builtin.include_role:
    name: systemuser
  vars:
    systemuser_name: "lldap"
    
- name: Create /opt/nitnelave
  ansible.builtin.file:
    path: /opt/nitnelave
    state: directory
    owner: lldap
    group: lldap
  become: true

- name: Install lldap
  ansible.builtin.unarchive:
    src: https://github.com/lldap/lldap/releases/download/v0.4.2/amd64-lldap.tar.gz
    dest: /opt/nitnelave/
    remote_src: true
    group: lldap
    owner: lldap
    extra_opts: [--strip-components=1]  # otherwise extracts into /opt/nitnelave/amd64-lldap/
  become: true
  become_user: lldap

- name: Deploy config
  ansible.builtin.template:
    src: lldap_config.toml.j2
    dest: /opt/nitnelave/lldap_config.toml
  become: true
  become_user: lldap
  register: lldap_config

- name: Install lldap service
  ansible.builtin.copy:
    src: lldap.service
    dest: /etc/systemd/system/lldap.service
  become: true
  
- name: Start/enable lldap service
  ansible.builtin.systemd:
    name: lldap.service
    state: started
    enabled: true
    daemon_reload: true
  become: true

- name: restart lldap
  ansible.builtin.systemd:
    name: lldap
    state: restarted
  become: true
  when: lldap_config.changed

- name: Deploy proxy config
  ansible.builtin.include_role:
    name: traefik
  vars:
    traefik_service: lldap
    app_port: 17170