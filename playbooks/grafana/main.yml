---
- name: Bootstrap container
  hosts: grafana
  remote_user: root
  roles:
    - root_ansibleuser
  tags:
    - bootstrap

- name: Set up grafana
  hosts: grafana
  tags:
    - main
  roles:
    - postgres
  tasks:
    - name: Install prerequisites
      ansible.builtin.apt:
        name: '{{ item }}'
        state: present
      become: true
      with_items:
        - apt-transport-https 
        - software-properties-common
        - wget
    
    - name: Add nginx apt-key
      ansible.builtin.apt_key: 
        url: 'https://apt.grafana.com/gpg.key'
        state: present 
      become: true
    
    - name: Add grafana repo
      ansible.builtin.apt_repository: 
        repo: 'deb https://apt.grafana.com stable main'
        state: present
        filename: grafana
        update_cache: true
      become: true

    - name: Install grafana
      ansible.builtin.apt:
        name: '{{ item }}'
        state: present
      become: true
      with_items:
        - grafana

    - name: start and enable service
      ansible.builtin.systemd_service:
        name: grafana-server
        enabled: true
        state: started
        daemon_reload: true
      become: true

    - name: Deploy config file
      ansible.builtin.template:
        src: grafana.ini.j2
        dest: /etc/grafana/grafana.ini
        group: grafana
        owner: root
        mode: '640'
      become: true
      notify: handler_restartGrafana

    - name: Deploy ldap config
      ansible.builtin.template:
        src: ldap.toml.j2
        dest: /etc/grafana/ldap.toml
        group: grafana
        owner: root
        mode: '640'
      become: true
      notify: handler_restartGrafana

  handlers:
    - name: handler_restartGrafana
      ansible.builtin.systemd_service:
        name: grafana-server
        state: restarted
      become: true